{"/home/carol/UDEMY/App_Disk_Agua/src/api/services/AdminService.ts":{"path":"/home/carol/UDEMY/App_Disk_Agua/src/api/services/AdminService.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":71}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":61}},"6":{"start":{"line":9,"column":23},"end":{"line":15,"column":1}},"7":{"start":{"line":10,"column":17},"end":{"line":13,"column":6}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":36}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":40}},"10":{"start":{"line":17,"column":24},"end":{"line":40,"column":1}},"11":{"start":{"line":18,"column":4},"end":{"line":39,"column":5}},"12":{"start":{"line":19,"column":29},"end":{"line":19,"column":64}},"13":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"14":{"start":{"line":21,"column":12},"end":{"line":21,"column":81}},"15":{"start":{"line":23,"column":29},"end":{"line":23,"column":71}},"16":{"start":{"line":24,"column":30},"end":{"line":29,"column":10}},"17":{"start":{"line":30,"column":8},"end":{"line":35,"column":9}},"18":{"start":{"line":31,"column":12},"end":{"line":31,"column":60}},"19":{"start":{"line":34,"column":12},"end":{"line":34,"column":53}},"20":{"start":{"line":38,"column":8},"end":{"line":38,"column":66}},"21":{"start":{"line":41,"column":0},"end":{"line":41,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":23},"end":{"line":9,"column":24}},"loc":{"start":{"line":9,"column":40},"end":{"line":15,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":24},"end":{"line":17,"column":25}},"loc":{"start":{"line":17,"column":43},"end":{"line":40,"column":1}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":14,"column":11},"end":{"line":14,"column":35}},"type":"cond-expr","locations":[{"start":{"line":14,"column":18},"end":{"line":14,"column":28}},{"start":{"line":14,"column":31},"end":{"line":14,"column":35}}],"line":14},"4":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"5":{"loc":{"start":{"line":30,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":35,"column":9}},{"start":{"line":30,"column":8},"end":{"line":35,"column":9}}],"line":30}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":4,"8":4,"9":1,"10":1,"11":3,"12":3,"13":3,"14":1,"15":2,"16":1,"17":1,"18":1,"19":0,"20":1,"21":1},"f":{"0":1,"1":4,"2":3},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[2,2],"4":[1,2],"5":[1,0]},"inputSourceMap":{"version":3,"file":"/home/carol/UDEMY/App_Disk_Agua/src/api/services/AdminService.ts","sources":["/home/carol/UDEMY/App_Disk_Agua/src/api/services/AdminService.ts"],"names":[],"mappings":";;;;;;AACA,wEAAgD;AAChD,8DAA+D;AAE/D,MAAM,cAAc,GAAG,KAAK,EAAE,KAAa,EAA0B,EAAE;IACrE,MAAM,IAAI,GAAG,MAAM,eAAK,CAAC,OAAO,CAAC;QAC/B,KAAK,EAAE,EAAE,KAAK,EAAE;QAChB,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,UAAU,CAAC,EAAE;KACtC,CAAC,CAAC;IACH,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AAClC,CAAC,CAAC;AA6BO,wCAAc;AA3BvB,MAAM,eAAe,GAAG,KAAK,EAAE,OAAiB,EAA8C,EAAE;IAC9F,IAAI;QACF,MAAM,YAAY,GAAG,MAAM,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAEzD,IAAI,YAAY,EAAE;YAChB,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,qCAAqC,EAAE,CAAC;SACtE;QAED,MAAM,YAAY,GAAG,IAAA,mBAAU,EAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAElD,MAAM,aAAa,GAAG,MAAM,eAAK,CAAC,MAAM,CAAC;YACvC,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,QAAQ,EAAE,YAAY;YACtB,IAAI,EAAE,OAAO,CAAC,IAAI;SACnB,CAAC,CAAC;QAEH,IAAI,aAAa,EAAE;YACjB,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC;SACjD;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;SAC1C;KACF;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,0BAA0B,EAAE,CAAC;KAC3D;AACH,CAAC,CAAC;AAEuB,0CAAe","sourcesContent":["import { IAdmin, NewAdmin } from '../interfaces/IAdmin';\nimport Users from '../../database/models/Users';\nimport { createHash } from '../../utils/authentication/crypto';\n\nconst getUserByEmail = async (email: string): Promise<IAdmin | null> => {\n  const user = await Users.findOne({\n    where: { email },\n    attributes: { exclude: ['password'] },\n  });\n  return user ? user.get() : null;\n};\n\nconst registerNewUser = async (newUser: NewAdmin): Promise<{ type: number; message: string }> => {\n  try {\n    const existingUser = await getUserByEmail(newUser.email);\n\n    if (existingUser) {\n      return { type: 409, message: 'Usu치rio j치 existe no banco de dados' };\n    }\n\n    const passwordHash = createHash(newUser.password);\n\n    const createNewUser = await Users.create({\n      name: newUser.name,\n      email: newUser.email,\n      password: passwordHash,\n      role: newUser.role,\n    });\n\n    if (createNewUser) {\n      return { type: 201, message: 'Usu치rio criado' };\n    } else {\n      throw new Error('Erro ao criar usu치rio');\n    }\n  } catch (error) {\n    return { type: 500, message: 'Erro interno do servidor' };\n  }\n};\n\nexport { getUserByEmail, registerNewUser };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"62c6884d3ace4183ca7c0b4af186f8a89a8f17cf"}}